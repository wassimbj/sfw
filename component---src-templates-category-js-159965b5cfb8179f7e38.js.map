{"version":3,"sources":["webpack:///./src/components/readingModal.js","webpack:///./src/components/subCategoryCard.js","webpack:///./src/templates/category.js","webpack:///./src/components/navbar.js","webpack:///./src/images/fw-icon.png"],"names":["ReadingModal","absolutePath","onClose","isOpen","html","useStaticQuery","allMarkdownRemark","edges","filter","edge","node","fileAbsolutePath","style","boxShadow","height","transform","transition","className","onClick","xmlns","width","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","id","d","dangerouslySetInnerHTML","__html","SubCategoryCard","name","useState","setIsOpen","onFocus","onBlur","CategoryPage","data","pageContext","category","categories","cat","slug","subCategories","allFile","title","class","map","sub","query","NavBar","to","href","target","module","exports"],"mappings":"yPAGe,SAASA,EAAT,GAA0D,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAc/CC,EAbAC,yBAAe,cAaAC,kBAAkBC,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,mBAAqBV,KAAc,GAA3GS,KAAQN,KAEb,OACE,yBACEQ,MAAO,CACLC,UAAW,+BACXC,OAAQ,QACRC,UAAU,eAAeZ,EAAS,EAAI,KAA7B,KACTa,WAAY,gDAEdC,UAAU,sJAEV,0BACEA,UAAU,iHACVC,QAAShB,GAET,yBAAKiB,MAAM,6BAA6BC,MAAM,KAAKN,OAAO,KAAKO,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,eAAa,IAAIC,iBAAe,QAAQC,kBAAgB,QAAQC,GAAG,SAAQ,0BAAMC,EAAE,2BAE1M,yBAAKX,UAAU,0DACb,yBAAKY,wBAAyB,CAACC,OAAQ1B,OCjChC,SAAS2B,EAAT,GAAkD,IAAvBC,EAAsB,EAAtBA,KAAM/B,EAAgB,EAAhBA,aAAgB,EAClCgC,oBAAS,GAA9B9B,EADuD,KAC/C+B,EAD+C,KAG9D,OACE,oCACE,4BACEC,QAAS,kBAAMD,GAAW/B,IAC1BiC,OAAQ,kBAAMF,GAAU,IACxBjB,UAAU,qGAER,yBAAKA,UAAS,iEAAkEd,EAAS,8BAAgC,qDAA3G,0CACd,0BAAMc,UAAU,uBAAuBe,IAEzC,kBAAChC,EAAD,CACEG,OAAQA,EACRD,QAAS,kBAAMgC,GAAU,IACzBjC,aAAcA,MCXT,SAASoC,EAAT,GAA8C,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACrCC,EAAWC,EAAWjC,QAAO,SAACkC,GAAD,OAASA,EAAIC,OAASJ,EAAYI,QAAM,GACrEC,EAAgBN,EAAKO,QAAQtC,MACnC,OACE,oCACE,kBAAC,IAAD,CAAKuC,MAAK,GAAKN,EAASM,QACxB,kBAAC,IAAD,MACA,yBAAK7B,UAAU,yCACb,0BAAMA,UAAU,qEAAqEuB,EAASM,OAC9F,yBAAK7B,UAAU,cACb,yBAAK8B,MAAM,kCAEPH,EAAcI,KAAI,SAAAC,GAAG,OACnB,kBAAClB,EAAD,CACEC,KAAMiB,EAAIvC,KAAKsB,KACf/B,aAAcgD,EAAIvC,KAAKT,sBAWlC,IAAMiD,EAAK,c,qcClClB,iFAIe,SAASC,IACtB,OACE,4BAAQlC,UAAU,oBAChB,yBAAKA,UAAU,mCACb,kBAAC,OAAD,CAAMmC,GAAG,IAAInC,UAAU,kCAAvB,QAGA,uBAAGoC,KAAK,kCAAkCC,OAAO,SAASrC,UAAU,kCAApE,c,qBCXRsC,EAAOC,QAAU,IAA0B","file":"component---src-templates-category-js-159965b5cfb8179f7e38.js","sourcesContent":["import { graphql, useStaticQuery } from 'gatsby'\r\nimport React from 'react'\r\n\r\nexport default function ReadingModal({ absolutePath, onClose, isOpen }) {\r\n  const data = useStaticQuery(graphql`\r\n    query DataQuery {\r\n      allMarkdownRemark {\r\n        edges{\r\n          node {\r\n            html\r\n            fileAbsolutePath\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\nconst {node: { html }} = data.allMarkdownRemark.edges.filter(edge => edge.node.fileAbsolutePath === absolutePath)[0];\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        boxShadow: '0 -7px 20px rgba(0,0,0,0.25)',\r\n        height: '400px',\r\n        transform: `translateY(${isOpen ? 0 : 105}%)`,\r\n        transition: 'transform 300ms cubic-bezier(0.4, 0, 0.2, 1)'\r\n      }}\r\n      className=\"cursor-default block text-left fixed bottom-0 left-0 w-full px-3 pt-5 pb-16 overflow-y-auto bg-gray-800 text-gray-200 z-50 rounded-t-xl transition\"\r\n    >\r\n      <span\r\n        className=\"absolute top-0 right-0 m-1 md:m-2 lg:m-5 p-2 rounded-full bg-gray-900 hover:bg-black transition cursor-pointer\"\r\n        onClick={onClose}\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\" id=\"Cross\"><path d=\"M20 20L4 4m16 0L4 20\"/></svg>\r\n      </span>\r\n      <div className=\"max-w-screen-lg p-3 pt-5 mx-auto block overflow-hidden\">\r\n        <div dangerouslySetInnerHTML={{__html: html}} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// export const query = graphql`\r\n//   query DataQuery {\r\n//     allMarkdownRemark {\r\n//       edges {\r\n//         node {\r\n//           html\r\n//           fileAbsolutePath\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\n","import React, { useState } from 'react'\r\nimport ReadingModal from './readingModal'\r\n\r\nexport default function SubCategoryCard({ name, absolutePath }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  // className=\"focus:outline-none overflow-hidden whitespace-nowrap overflow-ellipsis inline-block my-3 px-3 w-full overflow-hidden md:w-1/3 lg:w-1/4 cursor-pointer\"\r\n  return (\r\n    <>\r\n      <button\r\n        onFocus={() => setIsOpen(!isOpen)}\r\n        onBlur={() => setIsOpen(false)}\r\n        className=\"focus:outline-none inline-block my-3 px-3 w-full overflow-hidden md:w-1/3 lg:w-1/4 cursor-pointer\"\r\n      >\r\n          <div className={`overflow-hidden whitespace-nowrap overflow-ellipsis border-2 ${isOpen ? 'bg-gray-900 border-gray-600' : 'bg-gray-800 border-gray-700 hover:border-gray-900'} rounded-lg p-3 transition text-center`}>\r\n          <span className=\"font-medium text-lg\">{name}</span>\r\n        </div>\r\n        <ReadingModal\r\n          isOpen={isOpen}\r\n          onClose={() => setIsOpen(false)}\r\n          absolutePath={absolutePath}\r\n        />\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n","// import { Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport categories from '../content/categories.json';\r\n\r\nimport SEO from \"../components/seo\"\r\nimport NavBar from \"../components/navbar\";\r\nimport SubCategoryCard from \"../components/subCategoryCard\";\r\n\r\nexport default function CategoryPage({ data, pageContext }) {\r\n  const category = categories.filter((cat) => cat.slug === pageContext.slug)[0];\r\n  const subCategories = data.allFile.edges;\r\n  return (\r\n    <>\r\n      <SEO title={`${category.title}`} />\r\n      <NavBar />\r\n      <div className=\"text-gray-300 max-w-screen-lg mx-auto\">\r\n        <span className=\"block mt-10 mb-5 text-center font-semibold text-4xl text-gray-400\">{category.title}</span>\r\n        <div className=\"mt-10 px-2\">\r\n          <div class=\"flex flex-wrap overflow-hidden\">\r\n            {\r\n              subCategories.map(sub => (\r\n                <SubCategoryCard\r\n                  name={sub.node.name}\r\n                  absolutePath={sub.node.absolutePath}\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query getCategoriesFilesQuery($folder: String = \"\") {\r\n    allFile(\r\n      filter: {\r\n        sourceInstanceName: {eq: \"categories\"},\r\n        extension: {eq: \"md\"},\r\n        relativeDirectory: {eq: $folder}\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          name\r\n          absolutePath\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport CakeImg from '../images/fw-icon.png'\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <header className=\"bg-gray-800 px-3\">\r\n      <div className=\"text-center flex justify-around\">\r\n        <Link to=\"/\" className=\"block py-2 hover:text-gray-300\">\r\n          Home\r\n        </Link>\r\n        <a href=\"https://github.com/wassimbj/sfw\" target=\"_blank\" className=\"block py-2 hover:text-gray-300\">\r\n          Github\r\n        </a>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/fw-icon-60b665b2864317826cb358d210a3cc59.png\";"],"sourceRoot":""}