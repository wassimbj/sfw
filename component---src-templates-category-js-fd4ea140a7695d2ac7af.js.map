{"version":3,"sources":["webpack:///./src/components/readingModal.js","webpack:///./src/components/subCategoryCard.js","webpack:///./src/templates/category.js","webpack:///./src/components/navbar.js"],"names":["ReadingModal","absolutePath","onClose","isOpen","html","useStaticQuery","allMarkdownRemark","edges","filter","edge","node","fileAbsolutePath","onClick","className","style","boxShadow","height","transform","transition","xmlns","width","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","id","d","dangerouslySetInnerHTML","__html","SubCategoryCard","name","useState","setIsOpen","CategoryPage","data","pageContext","category","categories","activeLang","cat","slug","subCategories","allFile","title","class","map","sub","query","NavBar","to","href","target","onChange","e","window","lang","value","localStorage","setItem","location","pathname","reload","selected"],"mappings":"qQAGe,SAASA,EAAT,GAA0D,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAc7CC,EAbFC,yBAAe,cAaEC,kBAAkBC,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,mBAAqBV,KAAc,GAA3GS,KAAQN,KAEf,OACE,oCACE,0BACEQ,QAASV,EACTW,UAAS,qEACgDV,EAAS,UAAY,aADrE,yDAKX,yBACEW,MAAO,CACLC,UAAW,+BACXC,OAAQ,QACRC,UAAU,eAAed,EAAS,EAAI,KAA7B,KACTe,WAAY,gDAEdL,UAAU,sJAEV,0BACEA,UAAU,8HACVD,QAASV,GAET,yBAAKiB,MAAM,6BAA6BC,MAAM,KAAKJ,OAAO,KAAKK,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,eAAa,IAAIC,iBAAe,QAAQC,kBAAgB,QAAQC,GAAG,SAAQ,0BAAMC,EAAE,2BAE1M,yBAAKf,UAAU,8FACb,yBAAKgB,wBAAyB,CAACC,OAAQ1B,QCzClC,SAAS2B,EAAT,GAAkD,IAAvBC,EAAsB,EAAtBA,KAAM/B,EAAgB,EAAhBA,aAAgB,EAElCgC,oBAAS,GAA9B9B,EAFuD,KAE/C+B,EAF+C,KAI9D,OACE,oCACE,4BACEtB,QAAS,kBAAMsB,GAAW/B,IAE1BU,UAAU,qGAEV,yBAAKA,UAAS,iEAAkEV,EAAS,8BAAgC,qDAA3G,0CACZ,0BAAMU,UAAU,uBAAuBmB,KAG3C,kBAAChC,EAAD,CACEG,OAAQA,EACRD,QAAS,kBAAMgC,GAAU,IACzBjC,aAAcA,KCZP,SAASkC,EAAT,GAA8C,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACrCC,EAAWC,EAAWC,KAAYhC,QAAO,SAACiC,GAAD,OAASA,EAAIC,OAASL,EAAYK,QAAM,GACjFC,EAAgBP,EAAKQ,QAAQrC,MACnC,OACE,oCACE,kBAAC,IAAD,CAAKsC,MAAK,GAAKP,EAASO,QACxB,kBAAC,IAAD,CAAQP,SAAUA,EAASI,OAC3B,yBAAK7B,UAAU,yCACb,0BAAMA,UAAU,qEAAqEyB,EAASO,OAC9F,yBAAKhC,UAAU,cACb,yBAAKiC,MAAM,wCAEPH,EAAcI,KAAI,SAAAC,GAAG,OACnB,kBAACjB,EAAD,CACEC,KAAMgB,EAAItC,KAAKsB,KACf/B,aAAc+C,EAAItC,KAAKT,sBAWlC,IAAMgD,EAAK,c,+1BCnClB,mFAIe,SAASC,EAAT,GAA+B,IAAbZ,EAAY,EAAZA,SAe/B,OACE,4BAAQzB,UAAU,oBAChB,yBAAKA,UAAU,mCACb,kBAAC,OAAD,CAAMsC,GAAG,IAAItC,UAAU,kCAAvB,QAGA,uBAAGuC,KAAK,kCAAkCC,OAAO,SAASxC,UAAU,kCAApE,UAGA,4BACEyC,SAxBiB,SAACC,GACxB,GAAqB,oBAAXC,OAAuB,CAC/B,IAAMC,EAAOF,EAAEF,OAAOK,MACtBF,OAAOG,aAAaC,QAAQ,OAAQH,GAEJ,MAA7BD,OAAOK,SAASC,SACjBN,OAAOK,SAASE,SAGhBP,OAAOK,SAASC,SAAhB,IAA+BL,EAA/B,aAAgDnB,IAgB9CzB,UAAU,2FAEV,4BAAQ6C,MAAM,KAAKM,SAAyB,OAAfxB,KAA7B,aACA,4BAAQkB,MAAM,KAAKM,SAAyB,OAAfxB,KAA7B","file":"component---src-templates-category-js-fd4ea140a7695d2ac7af.js","sourcesContent":["import { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\n\nexport default function ReadingModal({ absolutePath, onClose, isOpen }) {\n  const data = useStaticQuery(graphql`\n    query DataQuery {\n      allMarkdownRemark {\n        edges{\n          node {\n            html\n            fileAbsolutePath\n          }\n        }\n      }\n    }\n  `);\n\n  const {node: { html }} = data.allMarkdownRemark.edges.filter(edge => edge.node.fileAbsolutePath === absolutePath)[0];\n\n  return (\n    <>\n      <span\n        onClick={onClose}\n        className={`\n          fixed top-0 left-0 w-full h-full bg-black opacity-25 ${isOpen ? 'visible' : 'invisible'} z-10 transition\n          cursor-pointer\n        `}\n      />\n      <div\n        style={{\n          boxShadow: '0 -7px 20px rgba(0,0,0,0.25)',\n          height: '400px',\n          transform: `translateY(${isOpen ? 0 : 105}%)`,\n          transition: 'transform 300ms cubic-bezier(0.4, 0, 0.2, 1)',\n        }}\n        className=\"cursor-default block text-left fixed bottom-0 left-0 w-full px-3 pt-5 pb-16 overflow-y-auto bg-gray-800 text-gray-200 z-50 rounded-t-xl transition\"\n      >\n        <span\n          className=\"absolute inline-block top-0 right-0 m-1 md:m-2 lg:m-5 p-2 rounded-full bg-gray-900 hover:bg-black transition cursor-pointer\"\n          onClick={onClose}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\" id=\"Cross\"><path d=\"M20 20L4 4m16 0L4 20\"/></svg>\n        </span>\n        <div className=\"md:text-lg text-base readingContent max-w-screen-lg p-3 pt-5 mx-auto block overflow-hidden\">\n          <div dangerouslySetInnerHTML={{__html: html}} />\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport ReadingModal from './readingModal'\n\nexport default function SubCategoryCard({ name, absolutePath }) {\n\n  const [isOpen, setIsOpen] = useState(false); // is readingList open\n\n  return (\n    <>\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        // onBlur={() => setIsOpen(false)}\n        className=\"focus:outline-none inline-block my-3 px-3 w-full overflow-hidden md:w-1/3 lg:w-1/4 cursor-pointer\"\n      >\n        <div className={`overflow-hidden whitespace-nowrap overflow-ellipsis border-2 ${isOpen ? 'bg-gray-900 border-gray-600' : 'bg-gray-800 border-gray-700 hover:border-gray-900'} rounded-lg p-3 transition text-center`}>\n          <span className=\"font-medium text-lg\">{name}</span>\n        </div>\n      </button>\n      <ReadingModal\n        isOpen={isOpen}\n        onClose={() => setIsOpen(false)}\n        absolutePath={absolutePath}\n      />\n    </>\n  )\n}\n","// import { Link } from \"gatsby\"\nimport React from \"react\"\nimport categories from '../content/categories.json';\nimport activeLang from '../lang/activeLang';\n\nimport SEO from \"../components/seo\"\nimport NavBar from \"../components/navbar\";\nimport SubCategoryCard from \"../components/subCategoryCard\";\n\nexport default function CategoryPage({ data, pageContext }) {\n  const category = categories[activeLang].filter((cat) => cat.slug === pageContext.slug)[0];\n  const subCategories = data.allFile.edges;\n  return (\n    <>\n      <SEO title={`${category.title}`} />\n      <NavBar category={category.slug} />\n      <div className=\"text-gray-300 max-w-screen-lg mx-auto\">\n        <span className=\"block mt-10 mb-5 text-center font-semibold text-4xl text-gray-400\">{category.title}</span>\n        <div className=\"mt-10 px-2\">\n          <div class=\"flex flex-wrap overflow-hidden pb-20\">\n            {\n              subCategories.map(sub => (\n                <SubCategoryCard\n                  name={sub.node.name}\n                  absolutePath={sub.node.absolutePath}\n                />\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport const query = graphql`\n  query getCategoriesFilesQuery($folder: String = \"\") {\n    allFile(\n      filter: {\n        sourceInstanceName: {eq: \"categories\"},\n        extension: {eq: \"md\"},\n        relativeDirectory: {eq: $folder}\n      }\n    ) {\n      edges {\n        node {\n          name\n          absolutePath\n        }\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport activeLang from '../lang/activeLang'\n\nexport default function NavBar({ category }) {\n  const handleLangChange = (e) => {\n    if(typeof window !== 'undefined'){\n      const lang = e.target.value;\n      window.localStorage.setItem('lang', lang);\n      // if we are at home, just reload the page\n      if(window.location.pathname === '/'){\n        window.location.reload();\n      } else {\n        // change the lang route\n        window.location.pathname = `/${lang}/category/${category}`;\n      }\n    }\n  }\n\n  return (\n    <header className=\"bg-gray-800 px-3\">\n      <div className=\"text-center flex justify-around\">\n        <Link to=\"/\" className=\"block py-2 hover:text-gray-300\">\n          Home\n        </Link>\n        <a href=\"https://github.com/wassimbj/sfw\" target=\"_blank\" className=\"block py-2 hover:text-gray-300\">\n          Github\n        </a>\n        <select\n          onChange={handleLangChange}\n          className=\"text-gray-300 pr-2 cursor-pointer focus:outline-none border-none rounded-sm bg-gray-800\"\n        >\n          <option value=\"en\" selected={activeLang === 'en'}> English </option>\n          <option value=\"tn\" selected={activeLang === 'tn'}> Tounsiii </option>\n        </select>\n      </div>\n    </header>\n  )\n}\n"],"sourceRoot":""}