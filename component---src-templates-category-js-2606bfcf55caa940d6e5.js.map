{"version":3,"sources":["webpack:///./src/components/readingModal.js","webpack:///./src/components/subCategoryCard.js","webpack:///./src/templates/category.js","webpack:///./src/components/navbar.js"],"names":["ReadingModal","absolutePath","onClose","isOpen","html","useStaticQuery","allMarkdownRemark","edges","filter","edge","node","fileAbsolutePath","onClick","className","style","boxShadow","height","transform","transition","xmlns","width","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","id","d","dangerouslySetInnerHTML","__html","SubCategoryCard","name","useState","setIsOpen","CategoryPage","data","pageContext","category","categories","activeLang","cat","slug","subCategories","allFile","title","class","map","sub","query","NavBar","selectedLang","window","localStorage","getItem","to","href","target","onChange","e","lang","value","setItem","location","pathname","reload","slice","lastIndexOf","selected"],"mappings":"qQAGe,SAASA,EAAT,GAA0D,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAc7CC,EAbFC,yBAAe,cAaEC,kBAAkBC,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,mBAAqBV,KAAc,GAA3GS,KAAQN,KAEf,OACE,oCACE,0BACEQ,QAASV,EACTW,UAAS,qEACgDV,EAAS,UAAY,aADrE,yDAKX,yBACEW,MAAO,CACLC,UAAW,+BACXC,OAAQ,QACRC,UAAU,eAAed,EAAS,EAAI,KAA7B,KACTe,WAAY,gDAEdL,UAAU,sJAEV,0BACEA,UAAU,8HACVD,QAASV,GAET,yBAAKiB,MAAM,6BAA6BC,MAAM,KAAKJ,OAAO,KAAKK,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,eAAa,IAAIC,iBAAe,QAAQC,kBAAgB,QAAQC,GAAG,SAAQ,0BAAMC,EAAE,2BAE1M,yBAAKf,UAAU,8FACb,yBAAKgB,wBAAyB,CAACC,OAAQ1B,QCzClC,SAAS2B,EAAT,GAAkD,IAAvBC,EAAsB,EAAtBA,KAAM/B,EAAgB,EAAhBA,aAAgB,EAElCgC,oBAAS,GAA9B9B,EAFuD,KAE/C+B,EAF+C,KAI9D,OACE,oCACE,4BACEtB,QAAS,kBAAMsB,GAAW/B,IAE1BU,UAAU,qGAEV,yBAAKA,UAAS,iEAAkEV,EAAS,8BAAgC,qDAA3G,0CACZ,0BAAMU,UAAU,uBAAuBmB,KAG3C,kBAAChC,EAAD,CACEG,OAAQA,EACRD,QAAS,kBAAMgC,GAAU,IACzBjC,aAAcA,KCZP,SAASkC,EAAT,GAA8C,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACrCC,EAAWC,EAAWC,KAAYhC,QAAO,SAACiC,GAAD,OAASA,EAAIC,OAASL,EAAYK,QAAM,GACjFC,EAAgBP,EAAKQ,QAAQrC,MACnC,OACE,oCACE,kBAAC,IAAD,CAAKsC,MAAK,GAAKP,EAASO,QACxB,kBAAC,IAAD,MACA,yBAAKhC,UAAU,yCACb,0BAAMA,UAAU,qEAAqEyB,EAASO,OAC9F,yBAAKhC,UAAU,cACb,yBAAKiC,MAAM,wCAEPH,EAAcI,KAAI,SAAAC,GAAG,OACnB,kBAACjB,EAAD,CACEC,KAAMgB,EAAItC,KAAKsB,KACf/B,aAAc+C,EAAItC,KAAKT,sBAWlC,IAAMgD,EAAK,c,+1BCnClB,uEAGe,SAASC,IACtB,IAAMC,EAAiC,oBAAXC,OAAyBA,OAAOC,aAAaC,QAAQ,QAAU,KAgB3F,OACE,4BAAQzC,UAAU,oBAChB,yBAAKA,UAAU,mCACb,kBAAC,OAAD,CAAM0C,GAAG,IAAI1C,UAAU,kCAAvB,QAGA,uBAAG2C,KAAK,kCAAkCC,OAAO,SAAS5C,UAAU,kCAApE,UAGA,4BAAQ6C,SAxBW,SAACC,GACxB,GAAqB,oBAAXP,OAAuB,CAC/B,IAAMQ,EAAOD,EAAEF,OAAOI,MAGtB,GAFAT,OAAOC,aAAaS,QAAQ,OAAQF,GAEJ,MAA7BR,OAAOW,SAASC,SACjBZ,OAAOW,SAASE,aACX,CAEL,IAAM3B,EAAWc,OAAOW,SAASC,SAASE,MAAMd,OAAOW,SAASC,SAASG,YAAY,KAAK,GAC1Ff,OAAOW,SAASC,SAAhB,IAA+BJ,EAA/B,aAAgDtB,KAcZzB,UAAU,+EAC5C,4BAAQgD,MAAM,KAAKO,SAA2B,OAAjBjB,GAA7B,aACA,4BAAQU,MAAM,KAAKO,SAA2B,OAAjBjB,GAA7B","file":"component---src-templates-category-js-2606bfcf55caa940d6e5.js","sourcesContent":["import { graphql, useStaticQuery } from 'gatsby'\r\nimport React from 'react'\r\n\r\nexport default function ReadingModal({ absolutePath, onClose, isOpen }) {\r\n  const data = useStaticQuery(graphql`\r\n    query DataQuery {\r\n      allMarkdownRemark {\r\n        edges{\r\n          node {\r\n            html\r\n            fileAbsolutePath\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const {node: { html }} = data.allMarkdownRemark.edges.filter(edge => edge.node.fileAbsolutePath === absolutePath)[0];\r\n\r\n  return (\r\n    <>\r\n      <span\r\n        onClick={onClose}\r\n        className={`\r\n          fixed top-0 left-0 w-full h-full bg-black opacity-25 ${isOpen ? 'visible' : 'invisible'} z-10 transition\r\n          cursor-pointer\r\n        `}\r\n      />\r\n      <div\r\n        style={{\r\n          boxShadow: '0 -7px 20px rgba(0,0,0,0.25)',\r\n          height: '400px',\r\n          transform: `translateY(${isOpen ? 0 : 105}%)`,\r\n          transition: 'transform 300ms cubic-bezier(0.4, 0, 0.2, 1)',\r\n        }}\r\n        className=\"cursor-default block text-left fixed bottom-0 left-0 w-full px-3 pt-5 pb-16 overflow-y-auto bg-gray-800 text-gray-200 z-50 rounded-t-xl transition\"\r\n      >\r\n        <span\r\n          className=\"absolute inline-block top-0 right-0 m-1 md:m-2 lg:m-5 p-2 rounded-full bg-gray-900 hover:bg-black transition cursor-pointer\"\r\n          onClick={onClose}\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\" id=\"Cross\"><path d=\"M20 20L4 4m16 0L4 20\"/></svg>\r\n        </span>\r\n        <div className=\"md:text-lg text-base readingContent max-w-screen-lg p-3 pt-5 mx-auto block overflow-hidden\">\r\n          <div dangerouslySetInnerHTML={{__html: html}} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ReadingModal from './readingModal'\r\n\r\nexport default function SubCategoryCard({ name, absolutePath }) {\r\n\r\n  const [isOpen, setIsOpen] = useState(false); // is readingList open\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        // onBlur={() => setIsOpen(false)}\r\n        className=\"focus:outline-none inline-block my-3 px-3 w-full overflow-hidden md:w-1/3 lg:w-1/4 cursor-pointer\"\r\n      >\r\n        <div className={`overflow-hidden whitespace-nowrap overflow-ellipsis border-2 ${isOpen ? 'bg-gray-900 border-gray-600' : 'bg-gray-800 border-gray-700 hover:border-gray-900'} rounded-lg p-3 transition text-center`}>\r\n          <span className=\"font-medium text-lg\">{name}</span>\r\n        </div>\r\n      </button>\r\n      <ReadingModal\r\n        isOpen={isOpen}\r\n        onClose={() => setIsOpen(false)}\r\n        absolutePath={absolutePath}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","// import { Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport categories from '../content/categories.json';\r\nimport activeLang from '../lang/activeLang';\r\n\r\nimport SEO from \"../components/seo\"\r\nimport NavBar from \"../components/navbar\";\r\nimport SubCategoryCard from \"../components/subCategoryCard\";\r\n\r\nexport default function CategoryPage({ data, pageContext }) {\r\n  const category = categories[activeLang].filter((cat) => cat.slug === pageContext.slug)[0];\r\n  const subCategories = data.allFile.edges;\r\n  return (\r\n    <>\r\n      <SEO title={`${category.title}`} />\r\n      <NavBar />\r\n      <div className=\"text-gray-300 max-w-screen-lg mx-auto\">\r\n        <span className=\"block mt-10 mb-5 text-center font-semibold text-4xl text-gray-400\">{category.title}</span>\r\n        <div className=\"mt-10 px-2\">\r\n          <div class=\"flex flex-wrap overflow-hidden pb-20\">\r\n            {\r\n              subCategories.map(sub => (\r\n                <SubCategoryCard\r\n                  name={sub.node.name}\r\n                  absolutePath={sub.node.absolutePath}\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query getCategoriesFilesQuery($folder: String = \"\") {\r\n    allFile(\r\n      filter: {\r\n        sourceInstanceName: {eq: \"categories\"},\r\n        extension: {eq: \"md\"},\r\n        relativeDirectory: {eq: $folder}\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          name\r\n          absolutePath\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { Link } from 'gatsby';\r\nimport React from 'react';\r\n\r\nexport default function NavBar() {\r\n  const selectedLang = typeof window !== 'undefined' ? window.localStorage.getItem('lang') : 'en';\r\n  const handleLangChange = (e) => {\r\n    if(typeof window !== 'undefined'){\r\n      const lang = e.target.value;\r\n      window.localStorage.setItem('lang', lang);\r\n      // if we are at home, just reload the page\r\n      if(window.location.pathname === '/'){\r\n        window.location.reload();\r\n      } else {\r\n        // change the lang route\r\n        const category = window.location.pathname.slice(window.location.pathname.lastIndexOf('/')+1);\r\n        window.location.pathname = `/${lang}/category/${category}`;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"bg-gray-800 px-3\">\r\n      <div className=\"text-center flex justify-around\">\r\n        <Link to=\"/\" className=\"block py-2 hover:text-gray-300\">\r\n          Home\r\n        </Link>\r\n        <a href=\"https://github.com/wassimbj/sfw\" target=\"_blank\" className=\"block py-2 hover:text-gray-300\">\r\n          Github\r\n        </a>\r\n        <select onChange={handleLangChange} className=\"text-gray-300 pr-2 cursor-pointer focus:outline-none rounded-sm bg-gray-700\">\r\n          <option value=\"en\" selected={selectedLang === 'en'}> English </option>\r\n          <option value=\"tn\" selected={selectedLang === 'tn'}> Tounsiii </option>\r\n        </select>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n"],"sourceRoot":""}