{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<p>its nothing but a web server (code you write e.g: using Nodejs, Python...) that respond to user requests (e.g: creating an account) with Fail or Success messages.<br>\n</br></p>\n<p><img src=\"https://www.altexsoft.com/media/2019/06/https-lh6-googleusercontent-com-_nyclktg8po_wx5-.png\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/computing/API.md"}},{"node":{"html":"<p><strong>A buffer</strong> contains data that is stored for a short amount of time, typically in the computer's memory (RAM). The purpose of a buffer is to hold data right before it is used. For example, when you download an audio or video file from the Internet, it may load the first 20% of it into a buffer and then begin to play.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/computing/buffer.md"}},{"node":{"html":"<p><strong>A cluster</strong>, refers to a group of machines that work together that perform a similar function. a computer cluster is controlled by a single software program that manages all the computers (also called \"nodes\") within the cluster. The nodes work together to complete a single task. This process is called \"parallel computing\" since the nodes perform operations in tandem. Computer clusters can range from two machines to hundreds of connected computers. Small clusters are often used to improve the performance of web and online gaming services by handling multiple incoming requests in parallel.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/computing/cluster.md"}},{"node":{"html":"<p>client in software has many meanings, but in general it means the consumer, it can be the browser (wich is you) it can be any thing that consume or use a software.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/computing/client.md"}},{"node":{"html":"<p>Compiler transforms code written in a high-level programming language into the machine code, at once (all code in a file), before program runs.<br>\n</br></p>\n<p><img src=\"https://hpc-wiki.info/mediawiki/hpc_images/thumb/8/8a/Compiler_Shematic.png/1000px-Compiler_Shematic.png\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/computing/compiler.md"}},{"node":{"html":"<p><strong>Computing</strong> is any activity that uses computers to manage, process, and communicate information.\nIt includes development of both hardware and software.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/computing/computing.md"}},{"node":{"html":"<p>its the same as a compiler, it converts high-level programming languages into machine code,\nbut the difference is that an interpreter converts each statement (instruction/code block... whatever), one by one, into the machine code, during program run.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/computing/Interpreter.md"}},{"node":{"html":"<p>its programming language that is machine friendly, It is tough to understand and complex to maintain, It is not commonly used now-a-days in programming. so relax ðŸ˜…</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/computing/Low-level programming.md"}},{"node":{"html":"<p>Im hearing this word almost every day, <strong>Reverse engineering</strong> is the process of uncovering principles behind a piece of hardware or software, such as its architecture and internal structure.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/computing/Reverse Engineering.md"}},{"node":{"html":"<p>Publish/subscribe messaging, or pub/sub messaging, is a form of asynchronous service-to-service (e.g: user and user cart) communication. for example service A, B, C subscribe to a topic (like a youtube channel, the channel is the topic) and when data is published to that topic the subscribers will get that data immediately. think of it like a youtube channel when the channel publish a new video the subscribers will be notified.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/computing/pub-sub.md"}},{"node":{"html":"<p>its simply a programming language that is human readable and easy to write, read and maintain.\nExamples of high level languages are C, C++, Java, Python, Javascript etc...</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/computing/High-level programming.md"}},{"node":{"html":"<p>a server can be refered to a software or hardware.<br>\n</br>\n<strong>in case of hardware</strong> its just a machine, a computer like yours that have an OS, a RAM a CPU... that stores your source code (files) and runs it based on instructions you give to it.<br>\n</br>\n<strong>in case of a software</strong> its a code that you write using a server side programming language like Node.js or Python...</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/computing/server.md"}},{"node":{"html":"<p><strong>Stream / Data stream</strong>, simply means data being sent somewhere (e.g, to a server) over time. A stream can be thought of as items on a conveyor belt being processed one at a time rather than in large batches.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/computing/stream.md"}},{"node":{"html":"<p>Convert the syntax of one programming language to another. That's it. for example typescript is a transpiled language.<br>\n</br></p>\n<p><img src=\"https://miro.medium.com/max/7200/1*G9cxwM-sZtK-LZjRq7Ii1g.png\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/computing/transpiler.md"}},{"node":{"html":"<p><strong>Pooling</strong> is a method used to keep database connections open so they can be reused by others. ... Pooling keeps the connections active so that, when a connection is later requested, one of the active ones is used in preference to having to create another one.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/databases/pooling.md"}},{"node":{"html":"<p><strong>Transaction :</strong> A transaction is a mechanism that allows you to mark a group of operations <strong><em>(sql queries)</em></strong> and execute them in such a way that either they all execute (commit), or the system state will be as if they have not started to execute at all (rollback).\ne.g:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- BEGIN TRANSACTION</span>\n<span class=\"token comment\">-- transfer $100 for example from one account to another</span>\n  <span class=\"token keyword\">UPDATE</span> users <span class=\"token keyword\">SET</span> balance <span class=\"token operator\">=</span> balance <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token keyword\">WHERE</span> user_id <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">UPDATE</span> users <span class=\"token keyword\">SET</span> balance <span class=\"token operator\">=</span> balance <span class=\"token operator\">-</span> <span class=\"token number\">100</span> <span class=\"token keyword\">WHERE</span> user_id <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">-- SELECT * FROM users WHERE user_id = 2;</span>\n  <span class=\"token comment\">-- ...</span>\n<span class=\"token comment\">-- END TRANSACTION</span></code></pre></div>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/databases/transaction.md"}},{"node":{"html":"<ul>\n<li>\n<p><strong>ACID-compliant :</strong> Stands for \"Atomicity, Consistency, Isolation, Durability.\" The ACID acronym defines four characteristics a database must have to ensure data integrity<br>\n</br>  </p>\n<ol>\n<li><strong>Atomicity :</strong> Atomicity guarantees each transaction is an \"all-or-nothing\" event. In other words, it succeeds or fails completely. Atomic operations prevent data corruption by disallowing partial transactions. If an operation cannot be completed, it is \"rolled back\" to the previous state, as if it never happened.<br>\n</br></li>\n<li><strong>Consistency :</strong> Consistency means that you guarantee that your data will be consistent; none of the constraints you have on related data will ever be violated.<br>\n</br></li>\n<li><strong>Isolation :</strong> Isolation means that one transaction cannot read data from another transaction that is not yet completed. If two transactions are executing concurrently, each one will see the world as if they were executing sequentially, and if one needs to read data that is written by another, it will have to wait until the other is finished.<br>\n</br></li>\n<li><strong>Durability :</strong> means that once a transaction is complete, it is guaranteed that all of the changes have been recorded to a durable medium (such as a hard disk), and the fact that the transaction has been completed is likewise recorded.  </li>\n</ol>\n</li>\n</ul>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/databases/acid.md"}},{"node":{"html":"<p><strong>Lazy loading</strong>, is a technique that delays loading resources (images, videos, ...) until they are needed. A common example is a webpage that defers loading images until the user scrolls to their location within the page. Lazy loading videos is also popular on the web. It is especially effective since video files are typically the largest resources loaded within a webpage. Instead of sending the entire video to a client's device, the web server only sends small portions of the video while the user is watching it. Popular video sharing websites like YouTube and Vimeo use lazy loading.<br>\n</br></p>\n<p><img src=\"https://lh6.googleusercontent.com/i2UfbjUx9E4OFGc6lqmH_qF3RwKw5yKu3VecpcdDM0znXUGFCSmHAx8IHcGi_NXOfCPVny7wmAmgXl1k5i3Nacm7gg4hbe22KFog8f4Yf-g1uJLb_pq6hSC0c_3qL_1EvWwf7ETQ\" alt=\"img\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/frontend/lazy-loading.md"}},{"node":{"html":"<p>Its just a function that returns a function.  </p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/javascript/closures.md"}},{"node":{"html":"<p>The event loop continuously checks the call stack to see if there's any function that needs to run. While doing so, it adds any function call it finds to the call stack and executes each one in order<br>\n</br></p>\n</br>\n<p><img src=\"https://miro.medium.com/max/1600/1*iHhUyO4DliDwa6x_cO5E3A.gif\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/javascript/event-loop.md"}},{"node":{"html":"<p>every js code you write (functions) javascript engine creates an execution context for it, Its a wrapper to help manage the code that is running. it contains your runnning code (e.g: functions) and also things beyond what you wrote, like the \"this\" object and all that stuff that the javascript engine create for you.  </p>\n</br>\n<p><img src=\"https://cpentalk.com/?qa=blob&#x26;qa_blobid=6137021251521763964\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/javascript/Execution Context.md"}},{"node":{"html":"<p>Its just a stack ðŸ“š of execution contexts, and which ever one at the top its the one that is currently running.  </p>\n</br>\n<p><img src=\"https://cpentalk.com/?qa=blob&#x26;qa_blobid=6137021251521763964\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/javascript/Execution Stack.md"}},{"node":{"html":"<p>Its just a memory space that the javascript engine sets up before executing your code. it sets up a memory space for your variables and functions, thats what explain when you call your function and then actually create it works, its already there in memory and javascript recognize it when it sees it, and for variables they are set to \"undefined\".  <em>(js is weird)</em></p>\n</br>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// example of hoisting</span>\n\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// this will work fine and it will return 4</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// this will throw an error, cause x is not defined </span>\n\n<span class=\"token keyword\">let</span> x<span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// x here will return \"undefined\"</span></code></pre></div>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/javascript/Hoisting.md"}},{"node":{"html":"<p>is where a variable available in your code. means where its defined and where you can use it.  </p>\n</br>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// example </span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error, a is not defined</span></code></pre></div>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/javascript/Scope.md"}},{"node":{"html":"<p>its just a function that is used as a parameter in some function.  </p>\n</br>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// example</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// greet is the paramter of the \"cb()\" function</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">greet</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>greet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/javascript/Callback.md"}},{"node":{"html":"<p>means the execution of single code instruction at a time.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/javascript/single-threaded.md"}},{"node":{"html":"<p>When you declare a variable a memory space is allocated in the memory with your variable name and value.\nwhen your program ends its work with that variable <strong>the garbage collector</strong> automatically remove/clean that occupied memory space (by your variable).</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/programming/garbage collection.md"}}]}}}