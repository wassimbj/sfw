{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<p>its nothing but a web server (code you write e.g: using Nodejs, Python...) that respond to user requests (e.g: creating an account) with Fail or Success messages.<br>\n</br></p>\n<p><img src=\"https://www.altexsoft.com/media/2019/06/https-lh6-googleusercontent-com-_nyclktg8po_wx5-.png\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/computing/API.md"}},{"node":{"html":"<p>Compiler transforms code written in a high-level programming language into the machine code, at once (all code in a file), before program runs.<br>\n</br></p>\n<p><img src=\"https://hpc-wiki.info/mediawiki/hpc_images/thumb/8/8a/Compiler_Shematic.png/1000px-Compiler_Shematic.png\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/computing/compiler.md"}},{"node":{"html":"<p><strong>A cluster</strong>, refers to a group of machines that work together that perform a similar function. a computer cluster is controlled by a single software program that manages all the computers (also called \"nodes\") within the cluster. The nodes work together to complete a single task. This process is called \"parallel computing\" since the nodes perform operations in tandem. Computer clusters can range from two machines to hundreds of connected computers. Small clusters are often used to improve the performance of web and online gaming services by handling multiple incoming requests in parallel.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/computing/cluster.md"}},{"node":{"html":"<p><strong>Computing</strong> is any activity that uses computers to manage, process, and communicate information.\nIt includes development of both hardware and software.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/computing/computing.md"}},{"node":{"html":"<p>client in software has many meanings, but in general it means the consumer, it can be the browser (wich is you) it can be any thing that consume or use a software.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/computing/client.md"}},{"node":{"html":"<p>its simply a programming language that is human readable and easy to write, read and maintain.\nExamples of high level languages are C, C++, Java, Python, Javascript etc...</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/computing/High-level programming.md"}},{"node":{"html":"<p><strong>A buffer</strong> contains data that is stored for a short amount of time, typically in the computer's memory (RAM). The purpose of a buffer is to hold data right before it is used. For example, when you download an audio or video file from the Internet, it may load the first 20% of it into a buffer and then begin to play.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/computing/buffer.md"}},{"node":{"html":"<p>its the same as a compiler, it converts high-level programming languages into machine code,\nbut the difference is that an interpreter converts each statement (instruction/code block... whatever), one by one, into the machine code, during program run.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/computing/Interpreter.md"}},{"node":{"html":"<p>its programming language that is machine friendly, It is tough to understand and complex to maintain, It is not commonly used now-a-days in programming. so relax ðŸ˜…</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/computing/Low-level programming.md"}},{"node":{"html":"<p>Publish/subscribe messaging, or pub/sub messaging, is a form of asynchronous service-to-service (e.g: user and user cart) communication. for example service A, B, C subscribe to a topic (like a youtube channel, the channel is the topic) and when data is published to that topic the subscribers will get that data immediately. think of it like a youtube channel when the channel publish a new video the subscribers will be notified.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/computing/pub-sub.md"}},{"node":{"html":"<p>Im hearing this word almost every day, <strong>Reverse engineering</strong> is the process of uncovering principles behind a piece of hardware or software, such as its architecture and internal structure.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/computing/Reverse Engineering.md"}},{"node":{"html":"<p>a server can be refered to a software or hardware.<br>\n</br>\n<strong>in case of hardware</strong> its just a machine, a computer like yours that have an OS, a RAM a CPU... that stores your source code (files) and runs it based on instructions you give to it.<br>\n</br>\n<strong>in case of a software</strong> its a code that you write using a server side programming language like Node.js or Python...</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/computing/server.md"}},{"node":{"html":"<p><strong>Stream / Data stream</strong>, simply means data being sent somewhere (e.g, to a server) over time. A stream can be thought of as items on a conveyor belt being processed one at a time rather than in large batches.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/computing/stream.md"}},{"node":{"html":"<p>Convert the syntax of one programming language to another. That's it. for example typescript is a transpiled language.<br>\n</br></p>\n<p><img src=\"https://miro.medium.com/max/7200/1*G9cxwM-sZtK-LZjRq7Ii1g.png\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/computing/transpiler.md"}},{"node":{"html":"<p><strong>Pooling</strong> is a method used to keep database connections open so they can be reused by others. ... Pooling keeps the connections active so that, when a connection is later requested, one of the active ones is used in preference to having to create another one.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/databases/pooling.md"}},{"node":{"html":"<p><strong>Lazy loading</strong>, is a technique that delays loading resources (images, videos, ...) until they are needed. A common example is a webpage that defers loading images until the user scrolls to their location within the page. Lazy loading videos is also popular on the web. It is especially effective since video files are typically the largest resources loaded within a webpage. Instead of sending the entire video to a client's device, the web server only sends small portions of the video while the user is watching it. Popular video sharing websites like YouTube and Vimeo use lazy loading.<br>\n</br></p>\n<p><img src=\"https://lh6.googleusercontent.com/i2UfbjUx9E4OFGc6lqmH_qF3RwKw5yKu3VecpcdDM0znXUGFCSmHAx8IHcGi_NXOfCPVny7wmAmgXl1k5i3Nacm7gg4hbe22KFog8f4Yf-g1uJLb_pq6hSC0c_3qL_1EvWwf7ETQ\" alt=\"img\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/frontend/lazy-loading.md"}},{"node":{"html":"<p><strong>Transaction :</strong> A transaction is a mechanism that allows you to mark a group of operations <strong><em>(sql queries)</em></strong> and execute them in such a way that either they all execute (commit), or the system state will be as if they have not started to execute at all (rollback).\ne.g:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- BEGIN TRANSACTION</span>\n<span class=\"token comment\">-- transfer $100 for example from one account to another</span>\n  <span class=\"token keyword\">UPDATE</span> users <span class=\"token keyword\">SET</span> balance <span class=\"token operator\">=</span> balance <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token keyword\">WHERE</span> user_id <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">UPDATE</span> users <span class=\"token keyword\">SET</span> balance <span class=\"token operator\">=</span> balance <span class=\"token operator\">-</span> <span class=\"token number\">100</span> <span class=\"token keyword\">WHERE</span> user_id <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">-- SELECT * FROM users WHERE user_id = 2;</span>\n  <span class=\"token comment\">-- ...</span>\n<span class=\"token comment\">-- END TRANSACTION</span></code></pre></div>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/databases/transaction.md"}},{"node":{"html":"<ul>\n<li>\n<p><strong>ACID-compliant :</strong> Stands for \"Atomicity, Consistency, Isolation, Durability.\" The ACID acronym defines four characteristics a database must have to ensure data integrity<br>\n</br>  </p>\n<ol>\n<li><strong>Atomicity :</strong> Atomicity guarantees each transaction is an \"all-or-nothing\" event. In other words, it succeeds or fails completely. Atomic operations prevent data corruption by disallowing partial transactions. If an operation cannot be completed, it is \"rolled back\" to the previous state, as if it never happened.<br>\n</br></li>\n<li><strong>Consistency :</strong> Consistency means that you guarantee that your data will be consistent; none of the constraints you have on related data will ever be violated.<br>\n</br></li>\n<li><strong>Isolation :</strong> Isolation means that one transaction cannot read data from another transaction that is not yet completed. If two transactions are executing concurrently, each one will see the world as if they were executing sequentially, and if one needs to read data that is written by another, it will have to wait until the other is finished.<br>\n</br></li>\n<li><strong>Durability :</strong> means that once a transaction is complete, it is guaranteed that all of the changes have been recorded to a durable medium (such as a hard disk), and the fact that the transaction has been completed is likewise recorded.  </li>\n</ol>\n</li>\n</ul>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/databases/ACID.md"}},{"node":{"html":"<p>Its just a function that returns a function.  </p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/javascript/closures.md"}},{"node":{"html":"<p>The event loop continuously checks the call stack to see if there's any function that needs to run. While doing so, it adds any function call it finds to the call stack and executes each one in order<br>\n</br></p>\n</br>\n<p><img src=\"https://miro.medium.com/max/1600/1*iHhUyO4DliDwa6x_cO5E3A.gif\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/javascript/event-loop.md"}},{"node":{"html":"<p>its just a function that is used as a parameter in some function.  </p>\n</br>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// example</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// greet is the paramter of the \"cb()\" function</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">greet</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>greet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/javascript/Callback.md"}},{"node":{"html":"<p>every js code you write (functions) javascript engine creates an execution context for it, Its a wrapper to help manage the code that is running. it contains your runnning code (e.g: functions) and also things beyond what you wrote, like the \"this\" object and all that stuff that the javascript engine create for you.  </p>\n</br>\n<p><img src=\"https://cpentalk.com/?qa=blob&#x26;qa_blobid=6137021251521763964\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/javascript/Execution Context.md"}},{"node":{"html":"<p>Its just a stack ðŸ“š of execution contexts, and which ever one at the top its the one that is currently running.  </p>\n</br>\n<p><img src=\"https://cpentalk.com/?qa=blob&#x26;qa_blobid=6137021251521763964\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/javascript/Execution Stack.md"}},{"node":{"html":"<p>Its just a memory space that the javascript engine sets up before executing your code. it sets up a memory space for your variables and functions, thats what explain when you call your function and then actually create it works, its already there in memory and javascript recognize it when it sees it, and for variables they are set to \"undefined\".</p>\n</br>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// example of hoisting</span>\n\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// this will work fine and it will return 4</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// this will return \"undefined\" </span>\n\n<span class=\"token keyword\">var</span> x<span class=\"token punctuation\">;</span></code></pre></div>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/javascript/Hoisting.md"}},{"node":{"html":"<p>is where a variable available in your code. means where its defined and where you can use it.  </p>\n</br>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// example </span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error, a is not defined</span></code></pre></div>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/javascript/Scope.md"}},{"node":{"html":"<p>means the execution of single code instruction at a time.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/javascript/single-threaded.md"}},{"node":{"html":"<p>El API ya sidi kif el wasit mabin el backend ta3ek w el user, houa code enti tektbou bch yjaweb 3la el user requests (using nodejs, python, whatever...), mathlan el user clicka 3la button bch ya3mel account ba3d ma7at esmou w kol chay, heki tetsama request 3malha el user lel backend ta3ek, w el API ta3ek yraja3lou success (your account is created) w ila failed (mathlan el email si deja mawjoud).</p>\n<p><strong>Note :</strong> lfayda ta3 el API houa enou y5alilk el backend w el frontend ta3k sÃ©parÃ©.<br>\n</br></p>\n<p>behi kifeh el request tetb3ath mel frontend lel backend ?, lehne testa3mel AJAX <em>(a9ra 3lha ba3d)</em>, w ila GraphQL, bch tetkalm m3a el server ta3k w tnajm tab3athlou data w houa yraja3lk el response.  </p>\n</br>\n<p><img src=\"https://www.altexsoft.com/media/2019/06/https-lh6-googleusercontent-com-_nyclktg8po_wx5-.png\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/computing/API.md"}},{"node":{"html":"<p><strong>El buffer</strong>, hia blasa fel memoire (RAM), tnajm t7ot feha data lwa9t mou3ayn w ba3d temchi 3la rou7a. mathlan enti 7atit film yetsab, tnajm tetfarj 3la d9i9a loula w el film mezel fel 20%. ekel 20% <em>(chwaya mel data lkol)</em> heki t7atet fel buffer.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/computing/buffer.md"}},{"node":{"html":"<p>When you declare a variable a memory space is allocated in the memory with your variable name and value.\nwhen your program ends its work with that variable <strong>the garbage collector</strong> automatically remove/clean that occupied memory space (by your variable).</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/en/programming/garbage collection.md"}},{"node":{"html":"<p>Client fel software yo9sdou bih el mosta3mel, el browser (eli houa enti) w ila el frontend ta3 el application ta3k.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/computing/client.md"}},{"node":{"html":"<p>El Compiler sidi 5ouya, ye5ou el code eli ktebtou enti lkol fard tharba, w y7awlou lel machine code (0,1), 9bal me lprogram yabda ye5dem. 9bal el execution ma3neha.<br>\n</br></p>\n<p><img src=\"https://hpc-wiki.info/mediawiki/hpc_images/thumb/8/8a/Compiler_Shematic.png/1000px-Compiler_Shematic.png\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/computing/compiler.md"}},{"node":{"html":"<p><strong>Computing</strong> hia kelma tet9al 3la aya hkaya testa3mel el computers bch tmanage, tproccessi, w ila tjib w thez information.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/computing/computing.md"}},{"node":{"html":"<!-- **A cluster**, refers to a group of machines that work together that perform a similar function. a computer cluster is controlled by a single software program that manages all the computers (also called \"nodes\") within the cluster. The nodes work together to complete a single task. This process is called \"parallel computing\" since the nodes perform operations in tandem. Computer clusters can range from two machines to hundreds of connected computers. Small clusters are often used to improve the performance of web and online gaming services by handling multiple incoming requests in parallel. -->\n<p><strong>Cluster</strong>, houa 3ibara 3la group ta3 ordinateret (machines, servers, ...), ye5dmou m3a b3athhom bch ya3mlou 7kaya wa7da. el cluster yet7akm fih program enti tektbou bch ymechi w yconfigri el computers (also called \"nodes\") lkol eli fel cluster. el nodes ye5dmou lkol m3a b3athhom fard wa9t bch ykamlou task we7d khw, el process ta3 el 5edma heki tetsaama <strong>\"parallel computing\"</strong>.</p>\n<p>el cluster tnajm tkoun feha zouz ordinateret, kima tnajm tkoun feha 1000 ordi. el clusters yesta3mlou dima bch y7asnou el performance ta3 site w el games 5ater tal9a barcha traffic w barcha requests fard wa9t (youslou hata 1 million request per sec).<br>\n</br></p>\n<p><em>Google, facebook, LOL, fortnite (games), tal9a barcha nes online fard wa9t w tal9a barcha requests fard wa9t haw wa7d b3ath message, le5er habet post, le5er rme 9ombla... kol ysirou fard wa9t, litha yemchiw yesta3lou clusters bch ynajmou ya5thou w ykamlou el requests heki lkol.</em><br>\n</br></p>\n<p>ken ta9raw zeda sa3at facebook y9oul eli houa wsel hata el melyar wa7d connecte fard wa9t, ken je ordi w ila zouz ymechiw fi facebook, rahou brek.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/computing/cluster.md"}},{"node":{"html":"<p>3aks el high-level programming language, hia language tabda sehla lel machine bech tefhmha, w tabda s3iba lel nes bch ta9raha, w tefhmha. example ta3 low-level languages houma el assembly w el machine code (0,1).</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/computing/Low-level programming.md"}},{"node":{"html":"<p>hia just programming language, eli tabda <strong>sehla bch ta9raha, tektebha w tawer feha (fel code no9sod)</strong>. example ta3 high level languages C, C++, Javascript, Python, Ruby, lista twila...</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/computing/High-level programming.md"}},{"node":{"html":"<p>kif el compiler, yched el code ta3ek w y7awlou lel machine code (0,1), emma el interpreter fi3outh ma yexecuti el code eli fel file lkol fard tharba, yebda yexecuti bestar bestarr wa9teli l program ta3ek yabda ye5dem.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/computing/Interpreter.md"}},{"node":{"html":"<p><strong>Publish/Subscribe</strong>, hia tari9a t5ali el services (systems) ta3k yetkalmou m3a b3athhom, mithel 3andek service A, B, C\n(<em>service tnajm t9oul 3lih kel server wa7dou</em>) subscribed il ay mawthou3 (topic), (mawthou3 3ibara 3la youtube channel), wa9tali service yab3th data lel mawthou3 haka (topic), ekel jme3a (services) eli 3amlin subscribe lel mawthou3 ynajmou ye5thou w ya9raw el data heki.<br>\n</br></p>\n<p>na3tik mithel enti 3andek ecommerce website, mathlan 3andek user-cart service, w 3andek products w analytics service el 3 subscribed el topic, (kol service 3andou server wa7dou), kif el user ya3mel \"add to basket\", mathlan el products service y7ot el data ta3 el product fi el topic w el user-cart w el analytics services wa9tali yraw kel data heki ya5thoha w ya3melou beha eli y7ebou, y7otouha fel databse..., mathlan el analytics yesta3melha bch ya9ra el user chnw y7eb bethabt w barcha jaw a5er...<br>\n</br></p>\n<p><strong>Examples ta3 pub/sub systems:</strong> redis, kafka, RabbitMQ, w fama barcha o5rin...</p>\n</br>\n<p><img src=\"https://miro.medium.com/max/4790/1*zC4JrtL2QfYDxGqzNbkzCg.png\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/computing/pub-sub.md"}},{"node":{"html":"<!-- Im hearing this word almost every day, **Reverse engineering** is the process of uncovering principles behind a piece of hardware or software, such as its architecture and internal structure. -->\n<p><strong>Reverse engineering</strong>, hia process testa3melha enti bch t7awel tefhem program w ila hardware, kifeh ye5dem w kifeh tesna3.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/computing/Reverse Engineering.md"}},{"node":{"html":"<!-- a server can be refered to a software or hardware.  \n</br>\n**in case of hardware** its just a machine, a computer like yours that have an OS, a RAM a CPU... that stores your source code (files) and runs it based on instructions you give to it.  \n</br>\n**in case of a software** its a code that you write using a server side programming language like Node.js or Python... -->\n<p><strong>Server ya sidi</strong> ynajm yet9al 3la el software w ila hardware (machine).<br>\n</br></p>\n<p><strong>kenou hardware :</strong> rahou ya7ki 3la machine/ordi kif ta3ek fih Operating system, RAM, CPU...<br>\n</br></p>\n<p><strong>kenou software :</strong> rahou ya7ki 3la el code eli tektbou enti, b server side programming language kima Node.js, Python, PHP...</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/computing/server.md"}},{"node":{"html":"<p><strong>Stream / Data Stream</strong>, hia kif el data tebda mechya li blasa (bara n9olou el server). </p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/computing/stream.md"}},{"node":{"html":"<p><strong>Note: Chouf chnia el transaction sa3 w ba3d ija a9ra chnia el ACID</strong><br>\n</br></p>\n<p><strong>ACID</strong>, houa e5tisar lel \"Atomicity (8ayr 9abla bch tjazeha), Consistency (thebta/metnes9a), Isolation, Durability (mtina, 9wiya)\"  hia feature tal9aha fel databases (mich el kol), bch tothmon eli el queries eli ta3malhom mayfasdouch el data.</p>\n</br>\n<p>nabdaw bel <strong>Atomicity</strong>, el database tothmonlk eli el transaction yee ye5dmou el kol w yanj7ou w ila yefchlou jemla w el database to93od kif mahiya kol cha3lih masar chay. Atomicity t5ali el data eli fel database dima s7i7a, 3an tri9 enhi mat5alich el queries ye5dmou chatr w chatr le. <strong>zid chouf el transaction chnia bch tefhem</strong>  </p>\n</br>\n<p><strong>Consistency</strong> ya3ni el database tothmonlk eli data tkoun te7tarem el 9awe3d eli 7atithom enti fel database, kima kel CHECK w kel primary key yelzmou mayt3awedch w kel chay haka... c bon ?<br>\n</br></p>\n<p><strong>Isolation</strong> ya3ni kol transaction matanjmch ta9ra el data ta3 eli 9balha hata lin tekmel saa3, mathlan ken zouz transactions 9a3din ymchiw (executing) fard wa9t, w thaniya 7achetha bdata mel loula, to93od testana saa3 hata tekmel el loula bch te5ou men 3andha el data bch tkamel hia 5edmetha. mrigel ??  </p>\n</br>\n<p><strong>Durability</strong> ya3ni enou kif el transaction saye kamlt, el database tothmonlk el data tsajlet w kol chay mrgl. </p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/databases/ACID.md"}},{"node":{"html":"<!-- Convert the syntax of one programming language to another. That's it. for example typescript is a transpiled language.   -->\n<p><strong>Transpiler</strong>, y7awel el syntax ta3 programming language ila programming language o5ra, mithel el typescript hia transpiled language.<br>\n</br></p>\n<p><img src=\"https://miro.medium.com/max/7200/1*G9cxwM-sZtK-LZjRq7Ii1g.png\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/computing/transpiler.md"}},{"node":{"html":"<p><strong>Pooling</strong> hia method testa3melha bch t5ali el database connection ma7loula bch testa3melha wa9t met7eb.\nw 3lech hatha ? enti kol mata3mel query lel database femma connection tet7al bink w bin el database, kel connection heki 3andha impact kbir 3la el performance, jet el method ta3 el pooling w 5alet el connection ma7loula kol query tal9a el beb ma7loul tod5ol 3la ra7tha.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/databases/pooling.md"}},{"node":{"html":"<p><strong>Transaction</strong> hia group ta3 sql queries ye5dmou m3a b3athhom fard wa9t. bch ya3mlou hkaya. haw example:<br>\n</br></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- BEGIN TRANSACTION</span>\n<span class=\"token comment\">-- example, transfer 100TND men account A lel account B</span>\n  <span class=\"token keyword\">UPDATE</span> users <span class=\"token keyword\">SET</span> balance <span class=\"token operator\">=</span> balance <span class=\"token operator\">+</span> <span class=\"token number\">100</span> <span class=\"token keyword\">WHERE</span> user_id <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">UPDATE</span> users <span class=\"token keyword\">SET</span> balance <span class=\"token operator\">=</span> balance <span class=\"token operator\">-</span> <span class=\"token number\">100</span> <span class=\"token keyword\">WHERE</span> user_id <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">-- SELECT * FROM users WHERE user_id = 2;</span>\n  <span class=\"token comment\">-- ...</span>\n<span class=\"token comment\">-- END TRANSACTION</span></code></pre></div>\n<p><strong>tsawer te5dem el update eloula w thaniya n9olou saret hkaya lel system tcrasha oooo, a9ra el \"ACID\" bch tefhem kifeh tetjaneb 7keya kif heka...</strong></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/databases/transaction.md"}},{"node":{"html":"<p><strong>Lazy loading</strong> technique yesta3mlouha el developers bch ywa5rou fel loading ta3 resources (kima images, videos...) hata lin ne7tajoulhom. w el technique hethi t7asen yeeeeeser fel performance ta3 el site.<br>\n</br></p>\n<p>example, wa9teli webpage matloadich el images el kol 7ata lin el user yscrolli w yemchilhom.<br>\n</br></p>\n<p><img src=\"https://lh6.googleusercontent.com/i2UfbjUx9E4OFGc6lqmH_qF3RwKw5yKu3VecpcdDM0znXUGFCSmHAx8IHcGi_NXOfCPVny7wmAmgXl1k5i3Nacm7gg4hbe22KFog8f4Yf-g1uJLb_pq6hSC0c_3qL_1EvWwf7ETQ\" alt=\"img\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/frontend/lazy-loading.md"}},{"node":{"html":"<!-- its just a function that is used as a parameter in some function.   -->\n<p><strong>Callback</strong> hia function testo3mel ka parameter fi function o5ra. haw example:   </p>\n</br>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// example</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// greet, hia el parameter ta3 el \"cb\" function </span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">greet</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>greet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/javascript/Callback.md"}},{"node":{"html":"<p><strong>Closure</strong> fel JS, hia function traja3 function o5ra, haw example:<br>\n</br></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// tnadi 3al foo() w tzid tnadi 3al function eli raje3tha el foo</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/javascript/closures.md"}},{"node":{"html":"<p>kol javascript function tektebha, el javascript engine ya3mlelha kif el wrapper (barra n9olou y7otha fi chkara), ekel chkara heki tetsama <strong>Execution context</strong>, bch y3awen fel managment ta3 el code eli 9a3ed yexecuta.<br>\n</br>\nel Execution context yabda fih el function ta3ek w el variables eli fost el function, w zeda hajat enti maktebthomch kif el <code class=\"language-text\">this</code> object eli javascript engine tasna3hom wa7adha.<br>\n</br></p>\n<p><strong>Javascript engine :</strong> houa eli yexecuti fel code ta3ek.</p>\n</br>\n<p><img src=\"https://cpentalk.com/?qa=blob&#x26;qa_blobid=6137021251521763964\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/javascript/Execution Context.md"}},{"node":{"html":"<p><strong>El Event-loop</strong> chnw ta3mel bethabt fel js ?\ntchouf el call stack (yabda fih functions bch ysirelhom lexecution), ken femma function lezemha texecuta w zeda tzid functions lel call stack. tadba texecuti mel fou9 hata tousel lel5er. kima fetaswira:  </p>\n</br>\n<p><img src=\"https://miro.medium.com/max/1600/1*iHhUyO4DliDwa6x_cO5E3A.gif\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/javascript/event-loop.md"}},{"node":{"html":"<!-- Its just a stack ðŸ“š of execution contexts, and which ever one at the top its the one that is currently running.   -->\n<p><strong>El Execution Stack</strong>, esmou 3la jesmou, yabda stack ðŸ“š ta3 execution contexts, kif taswira lota, w el javascript engine yabda yexecuti fel stack mel fou9 lel lota.</p>\n</br>\n<p><img src=\"https://cpentalk.com/?qa=blob&#x26;qa_blobid=6137021251521763964\"></p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/javascript/Execution Stack.md"}},{"node":{"html":"<p><strong>El Hoisting</strong> fel javascript, hia memory space yasna3ha el javascript engine 9bal mayabda yexecuti fel code ta3ek. yasna3 memory space lel functions w el variables. hathaka chnw yfeser wa9teli tnadi 3la function w ba3d tasna3ha kif fel example lota ta5tf. 5ater el function si deja mawjouda fel memory ta3 el javascript, w el variables ta3melhom memory space w t7ot fihom \"undefined\" value.</p>\n</br>  \n<p>Example ta3 hoisting:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// hethi bch ta5tef w traja 4</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// hna bch yraja3lek \"undefined\" </span>\n<span class=\"token keyword\">var</span> x<span class=\"token punctuation\">;</span></code></pre></div>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/javascript/Hoisting.md"}},{"node":{"html":"<p>enti wa9teli ta3mel declaration lel variable fi programmk femma memory space (fel RAM) tetsna3, yabda feha el value w el address ta3 el variable ta3k, wa9t el programm ta3k youfa w ma3dch ye5dem bel variable haka, yji dawer el <strong>garbage collector</strong> ynathef ekel memory space heki eli 5thaha el variable, bch najmou nesta3mlouha el mara jaya.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/programming/garbage collection.md"}},{"node":{"html":"<p><strong>Scope</strong>, kelma yo9sdou beha win tnajm testa3mel el variable eli sna3tou, w ila win el variable ta3k accessible leli y7eb yesta3mlou. </p>\n</br>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// example </span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error, a is not defined</span></code></pre></div>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/javascript/Scope.md"}},{"node":{"html":"<!-- means the execution of single code instruction at a time. -->\n<p><strong>Single-threaded</strong> ya3ni matnajm texecuti ken starr bark fi wa9t bark.</p>\n<p>Javascript is single-threaded.</p>","fileAbsolutePath":"D:/wassim-workspace/opensource/sfwwebsite/src/content/categories/tn/javascript/single-threaded.md"}}]}}}